// import { useLoader } from "@react-three/fiber";
// import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
// import { DRACOLoader } from "three/examples/jsm/loaders/DRACOLoader";
import { useGLTF } from "@react-three/drei";
import { GroupProps } from "@react-three/fiber";

const Hamburger = (props: GroupProps) => {
	// const model = useLoader(
	// 	GLTFLoader,
	// 	//  "/hamburger.glb",
	// 	"/hamburger-draco.glb",
	// 	(loader) => {
	// 		const dracoLoader = new DRACOLoader();
	// 		dracoLoader.setDecoderPath("/draco/");
	// 		loader.setDRACOLoader(dracoLoader);
	// 	}
	// );
	// const model = useGLTF(
	// 	// "/hamburger.glb"
	// 	"/hamburger-draco.glb"
	// );

	// return (
	// 	<>
	// {/* Clone Helper will clone the mesh w/ existing geometry & material */}
	// 		<Clone
	// 			object={model.scene}
	// 			scale={0.35}
	// 			position-x={-4}
	// 			position-y={-1}
	// 		/>
	// 		<Clone object={model.scene} scale={0.35} position-x={0} position-y={-1} />
	// 		<Clone object={model.scene} scale={0.35} position-x={4} position-y={-1} />
	// 	</>
	// );

	/*
	Auto-generated by: https://github.com/pmndrs/gltfjsx
	*/
	const { nodes, materials } = useGLTF("/hamburger-draco.glb", true);

	return (
		<group {...props} dispose={null}>
			<mesh
				castShadow
				receiveShadow
				geometry={(nodes.cheese as THREE.Mesh).geometry}
				material={materials.CheeseMaterial}
				position={[0, 3.04, 0]}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={(nodes.bottomBun as THREE.Mesh).geometry}
				material={materials.BunMaterial}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={(nodes.meat as THREE.Mesh).geometry}
				material={materials.SteakMaterial}
				position={[0, 2.82, 0]}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={(nodes.topBun as THREE.Mesh).geometry}
				material={materials.BunMaterial}
				position={[0, 1.77, 0]}
			/>
		</group>
	);
};

/* this will preload the model */
useGLTF.preload("/hamburger-draco.glb");

export default Hamburger;
